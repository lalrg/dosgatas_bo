//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "recipe")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: u32,
    #[sea_orm(column_type = "Text")]
    pub name: String,
    #[sea_orm(column_type = "Text", nullable)]
    pub description: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::recipe_product::Entity")]
    RecipeProduct,
}

impl Related<super::recipe_product::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::RecipeProduct.def()
    }
}

impl Related<super::product::Entity> for Entity {
    fn to() -> RelationDef {
        super::recipe_product::Relation::Product.def()
    }
    fn via() -> Option<RelationDef> {
        Some(super::recipe_product::Relation::Recipe.def().rev())
    }
}

impl ActiveModelBehavior for ActiveModel {}
